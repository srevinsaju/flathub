diff --git a/activity/activity.info b/activity/activity.info
index 9a7cc05..e620133 100644
--- a/activity/activity.info
+++ b/activity/activity.info
@@ -2,10 +2,15 @@
 name = Typing Turtle
 activity_version = 31
 license = GPLv3+
-bundle_id = org.laptop.community.TypingTurtle
+release_date = 2019-12-28
+bundle_id = org.sugarlabs.TypingTurtle
 icon = Activity-typingturtle
 exec = sugar-activity3 typingturtle.TypingTurtle
 summary = Need some help typing? Here you will learn the best way to hold your hands in order for you to become a faster typist!
+description = Typing Turtle is an interactive touch typing program. It gradually introduces the keys on the keyboard through a series of lessons, until the student has learned the entire keyboard.
+metadata_license = CC0-1.0
+update_contact = tch@sugarlabs.org
+developer_name = Sugar Labs Community
 repository = https://github.com/sugarlabs/typing-turtle-activity
 tags = Language;System;Game
 url = https://help.sugarlabs.org/en/typing_turtle.html
diff --git a/balloongame.py b/balloongame.py
index 746b602..4c1558b 100644
--- a/balloongame.py
+++ b/balloongame.py
@@ -245,7 +245,7 @@ class BalloonGame(Gtk.VBox):
     
         cr.set_source_rgb(0, 0, 0)
         pango_layout = PangoCairo.create_layout(cr)
-        fd = Pango.FontDescription('Times')
+        fd = Pango.FontDescription('Monospace')
         fd.set_size(12 * Pango.SCALE)
         pango_layout.set_font_description(fd)
         pango_layout.set_text(report, len(report))
@@ -354,7 +354,7 @@ class BalloonGame(Gtk.VBox):
 
     def queue_draw_score(self):
         layout = self.area.create_pango_layout(_('SCORE: %d') % self.score)
-        layout.set_font_description(Pango.FontDescription('Times 14'))
+        layout.set_font_description(Pango.FontDescription('Monospace 14'))
         size = layout.get_size()
         x = self.bounds.width-20-size[0]/Pango.SCALE
         y = 20
@@ -363,7 +363,7 @@ class BalloonGame(Gtk.VBox):
     def draw_score(self, cr):
         cr.set_source_rgb(0, 0, 0)
         pango_layout = PangoCairo.create_layout(cr)
-        fd = Pango.FontDescription('Times')
+        fd = Pango.FontDescription('Monospace')
         fd.set_size(14 * Pango.SCALE)
         pango_layout.set_font_description(fd)
         text = _('SCORE: %d') % self.score
@@ -380,7 +380,7 @@ class BalloonGame(Gtk.VBox):
         # Draw instructions.
         cr.set_source_rgb(0, 0, 0)
         pango_layout = PangoCairo.create_layout(cr)
-        pango_layout.set_font_description(Pango.FontDescription('Times 14'))
+        pango_layout.set_font_description(Pango.FontDescription('Monospace 14'))
         text = _('Type the words to pop the balloons!')
         pango_layout.set_text(text, len(text))
         size = pango_layout.get_size()
diff --git a/keyboard.py b/keyboard.py
index 48bdbfc..82eb7ee 100644
--- a/keyboard.py
+++ b/keyboard.py
@@ -106,14 +106,7 @@ def _is_olpcm_model():
     keyboard, and 'olpc' for membrane keyboard.
 
     """
-    code = None
-    p = subprocess.Popen(["setxkbmap", "-query"], stdout=subprocess.PIPE)
-    out, err = p.communicate()
-    
-    for line in out.decode('utf-8').splitlines():
-        if line.startswith('model:'):
-            code = line.split()[1]
-    return code == 'olpcm'
+    pass
 
 def get_layout():
     if _is_olpcm_model():
diff --git a/titlescene.py b/titlescene.py
index b28d8b3..04b78e5 100644
--- a/titlescene.py
+++ b/titlescene.py
@@ -34,7 +34,7 @@ class TitleScene(Gtk.DrawingArea):
     TITLE_OFFSET = (20, 50)
 
     # Font used to display the title.
-    TITLE_FONT = 'Times 45'
+    TITLE_FONT = 'Monospace 45'
 
     def __init__(self):
         Gtk.DrawingArea.__init__(self)
diff --git a/typingturtle.py b/typingturtle.py
index d37300a..df0702e 100755
--- a/typingturtle.py
+++ b/typingturtle.py
@@ -16,7 +16,7 @@
 """Typing Turtle - Interactive typing tutor for Sugar."""
 
 # Import standard Python modules.
-import logging, os, math, time, copy, locale, datetime, random, re
+import logging, os, math, time, copy, locale, datetime, random, re, sys
 from gettext import gettext as _
 import json
 
@@ -33,7 +33,7 @@ gi.require_version('Gtk', '3.0')
 from gi.repository import Gtk
 
 # Import Sugar UI modules.
-import sugar3.activity.activity
+import sugar3
 from sugar3.graphics import *
 from sugar3.graphics import toolbutton
 from sugar3 import profile
@@ -42,14 +42,17 @@ from sugar3.graphics.toolbarbox import ToolbarBox
 from sugar3.activity.widgets import StopButton
 from sugar3.activity.widgets import ActivityToolbarButton
 
+from sugarapp.widgets import SugarCompatibleActivity
+
 # Initialize logging.
 log = logging.getLogger('Typing Turtle')
 log.setLevel(logging.DEBUG)
 logging.basicConfig()
 
 # Change to bundle directory.
-bundle_path = sugar3.activity.activity.get_bundle_path() 
+bundle_path = os.environ['SUGAR_BUNDLE_PATH'] 
 os.chdir(bundle_path)
+sys.path.append(bundle_path)
 
 # Set correct DPI for Rsvg and Screen
 gi.require_version('PangoCairo', '1.0')
@@ -78,9 +81,9 @@ import mainscreen, editlessonlistscreen
 # 
 # It owns the main application window, and all the various toolbars and options.
 # Activity Screens are stored in a stack, with the currently active screen on top.
-class TypingTurtle(sugar3.activity.activity.Activity):
+class TypingTurtle(SugarCompatibleActivity):
     def __init__ (self, handle):
-        sugar3.activity.activity.Activity.__init__(self, handle)
+        SugarCompatibleActivity.__init__(self, handle)
         self.set_title(_("Typing Turtle"))
         self.max_participants = 1
         
@@ -206,4 +209,3 @@ class TypingTurtle(sugar3.activity.activity.Activity):
             fd.write(text)
         finally:
             fd.close()
-
